"use strict";var b=Object.create;var n=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames,l=Object.getOwnPropertySymbols,C=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty,A=Object.prototype.propertyIsEnumerable;var c=(r,e,o)=>e in r?n(r,e,{enumerable:!0,configurable:!0,writable:!0,value:o}):r[e]=o,i=(r,e)=>{for(var o in e||(e={}))f.call(e,o)&&c(r,o,e[o]);if(l)for(var o of l(e))A.call(e,o)&&c(r,o,e[o]);return r};var O=(r,e)=>{for(var o in e)n(r,o,{get:e[o],enumerable:!0})},u=(r,e,o,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let t of m(e))!f.call(r,t)&&t!==o&&n(r,t,{get:()=>e[t],enumerable:!(s=y(e,t))||s.enumerable});return r};var h=(r,e,o)=>(o=r!=null?b(C(r)):{},u(e||!r||!r.__esModule?n(o,"default",{value:r,enumerable:!0}):o,r)),x=r=>u(n({},"__esModule",{value:!0}),r);var T={};O(T,{default:()=>p});module.exports=x(T);var g=h(require("javascript-obfuscator"));var v={excludes:[],enable:!0,options:{compact:!0,controlFlowFlattening:!0,controlFlowFlatteningThreshold:1,deadCodeInjection:!1,debugProtection:!1,debugProtectionInterval:0,disableConsoleOutput:!1,identifierNamesGenerator:"hexadecimal",log:!1,numbersToExpressions:!1,renameGlobals:!1,selfDefending:!0,simplify:!0,splitStrings:!1,stringArray:!1,stringArrayCallsTransform:!1,stringArrayCallsTransformThreshold:.5,stringArrayEncoding:[],stringArrayIndexShift:!0,stringArrayRotate:!0,stringArrayShuffle:!0,stringArrayWrappersCount:1,stringArrayWrappersChainedCalls:!0,stringArrayWrappersParametersMaxCount:2,stringArrayWrappersType:"variable",stringArrayThreshold:.75,unicodeEscapeSequence:!1}};function p(r){let e=i(i({},v),r);return{name:"vite-plugin-bundle-obfuscator",transformIndexHtml:{enforce:"post",transform(o,{bundle:s}){return!e.enable||!s||(console.log("Starting obfuscation process..."),Object.entries(s).forEach(([t,a])=>{"code"in a&&a.code&&e.excludes.every(d=>!t.includes(d))&&(console.log(`Obfuscating ${t}...`),a.code=g.default.obfuscate(a.code,e.options).getObfuscatedCode(),console.log(`Obfuscation complete for ${t}`))}),console.log("Obfuscation process completed.")),o}}}}
